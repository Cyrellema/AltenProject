{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i6 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nconst _c0 = [\"container\"];\nconst _c1 = [\"in\"];\nconst _c2 = [\"multiIn\"];\nconst _c3 = [\"multiContainer\"];\nconst _c4 = [\"ddBtn\"];\nconst _c5 = [\"items\"];\nconst _c6 = [\"scroller\"];\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"p-autocomplete-dd-input\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 8, 9);\n    i0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onInputClick($event));\n    })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onInput($event));\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onKeydown($event));\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onKeyup($event));\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputFocus($event));\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onInputBlur($event));\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onInputChange($event));\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onInputPaste($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r1.autofocus)(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", i0.ɵɵpureFunction2(20, _c7, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n  }\n}\n\nfunction AutoComplete_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_3_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutoComplete_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_4_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r25 = i0.ɵɵnextContext().$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r28.resolveFieldData(val_r25));\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_li_2_span_4_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      i0.ɵɵnextContext();\n\n      const _r26 = i0.ɵɵreference(1);\n\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.removeItem(_r26));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutoComplete_ul_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17, 18);\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(3, AutoComplete_ul_5_li_2_span_3_Template, 2, 1, \"span\", 20);\n    i0.ɵɵtemplate(4, AutoComplete_ul_5_li_2_span_4_Template, 1, 0, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r25 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c8, val_r25));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.disabled && !ctx_r23.readonly);\n  }\n}\n\nconst _c9 = function (a0, a1) {\n  return {\n    \"p-disabled\": a0,\n    \"p-focus\": a1\n  };\n};\n\nfunction AutoComplete_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 11, 12);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_Template_ul_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n\n      const _r24 = i0.ɵɵreference(5);\n\n      return i0.ɵɵresetView(_r24.focus());\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_Template, 5, 6, \"li\", 13);\n    i0.ɵɵelementStart(3, \"li\", 14)(4, \"input\", 15, 16);\n    i0.ɵɵlistener(\"input\", function AutoComplete_ul_5_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.onInput($event));\n    })(\"click\", function AutoComplete_ul_5_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onInputClick($event));\n    })(\"keydown\", function AutoComplete_ul_5_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onKeydown($event));\n    })(\"keyup\", function AutoComplete_ul_5_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onKeyup($event));\n    })(\"focus\", function AutoComplete_ul_5_Template_input_focus_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onInputFocus($event));\n    })(\"blur\", function AutoComplete_ul_5_Template_input_blur_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.onInputBlur($event));\n    })(\"change\", function AutoComplete_ul_5_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onInputChange($event));\n    })(\"paste\", function AutoComplete_ul_5_Template_input_paste_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onInputPaste($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c9, ctx_r4.disabled, ctx_r4.focus));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r4.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r4.autofocus)(\"disabled\", ctx_r4.disabled)(\"readonly\", ctx_r4.readonly)(\"autocomplete\", ctx_r4.autocomplete)(\"ngStyle\", ctx_r4.inputStyle);\n    i0.ɵɵattribute(\"type\", ctx_r4.type)(\"id\", ctx_r4.inputId)(\"placeholder\", ctx_r4.value && ctx_r4.value.length ? null : ctx_r4.placeholder)(\"tabindex\", ctx_r4.tabindex)(\"maxlength\", ctx_r4.maxlength)(\"aria-label\", ctx_r4.ariaLabel)(\"aria-labelledby\", ctx_r4.ariaLabelledBy)(\"aria-required\", ctx_r4.required)(\"aria-controls\", ctx_r4.listId)(\"aria-expanded\", ctx_r4.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n  }\n}\n\nfunction AutoComplete_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 24);\n  }\n}\n\nfunction AutoComplete_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25, 26);\n    i0.ɵɵlistener(\"click\", function AutoComplete_button_7_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.handleDropdownClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r6.dropdownIcon)(\"disabled\", ctx_r6.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r6.dropdownAriaLabel)(\"tabindex\", ctx_r6.tabindex);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_p_scroller_3_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c10 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\n\nfunction AutoComplete_div_8_p_scroller_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_p_scroller_3_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    const items_r56 = ctx.$implicit;\n    const scrollerOptions_r57 = ctx.options;\n    i0.ɵɵnextContext(2);\n\n    const _r50 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c10, items_r56, scrollerOptions_r57));\n  }\n}\n\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c11 = function (a0) {\n  return {\n    options: a0\n  };\n};\n\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r60 = ctx.options;\n    const ctx_r59 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r59.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c11, scrollerOptions_r60));\n  }\n}\n\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 36);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nconst _c12 = function (a0) {\n  return {\n    height: a0\n  };\n};\n\nfunction AutoComplete_div_8_p_scroller_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r63 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-scroller\", 33, 34);\n    i0.ɵɵlistener(\"onLazyLoad\", function AutoComplete_div_8_p_scroller_3_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r63);\n      const ctx_r62 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r62.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_p_scroller_3_ng_template_2_Template, 1, 5, \"ng-template\", 35);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_p_scroller_3_ng_container_3_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c12, ctx_r48.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r48.suggestions)(\"itemSize\", ctx_r48.virtualScrollItemSize || ctx_r48._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r48.lazy)(\"options\", ctx_r48.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r48.loaderTemplate);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c13 = function () {\n  return {};\n};\n\nfunction AutoComplete_div_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r50 = i0.ɵɵreference(6);\n\n    const ctx_r49 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c10, ctx_r49.suggestions, i0.ɵɵpureFunction0(2, _c13)));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optgroup_r74 = i0.ɵɵnextContext().$implicit;\n    const ctx_r75 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r75.getOptionGroupLabel(optgroup_r74) || \"empty\");\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    const optgroup_r74 = ctx.$implicit;\n    const scrollerOptions_r66 = i0.ɵɵnextContext(2).options;\n\n    const _r70 = i0.ɵɵreference(5);\n\n    const ctx_r73 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c12, scrollerOptions_r66.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r73.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r73.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c8, optgroup_r74));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r70)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c8, ctx_r73.getOptionGroupChildren(optgroup_r74)));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_Template, 4, 12, \"ng-template\", 41);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r65 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r65);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const items_r65 = i0.ɵɵnextContext().$implicit;\n\n    const _r70 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r70)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c8, items_r65));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r85 = i0.ɵɵnextContext().$implicit;\n    const ctx_r87 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r87.resolveFieldData(option_r85));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c14 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r91 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r91);\n      const option_r85 = restoredCtx.$implicit;\n      const ctx_r90 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r90.selectItem(option_r85));\n    });\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r85 = ctx.$implicit;\n    const idx_r86 = ctx.index;\n    const scrollerOptions_r66 = i0.ɵɵnextContext(2).options;\n    const ctx_r84 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c12, scrollerOptions_r66.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction1(8, _c14, option_r85 === ctx_r84.highlightOption))(\"id\", ctx_r84.highlightOption == option_r85 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r84.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r84.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c15, option_r85, scrollerOptions_r66.getOptions ? scrollerOptions_r66.getOptions(idx_r86) : idx_r86));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template, 3, 13, \"li\", 43);\n  }\n\n  if (rf & 2) {\n    const suggestionsToDisplay_r83 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r83);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r93.emptyMessageLabel, \" \");\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_li_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 47);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 45);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_li_6_ng_container_1_Template, 2, 1, \"ng-container\", 46);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_li_6_ng_container_2_Template, 2, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r66 = i0.ɵɵnextContext().options;\n    const ctx_r72 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c12, scrollerOptions_r66.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r72.emptyTemplate)(\"ngIfElse\", ctx_r72.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r72.emptyTemplate);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 37, 38);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_container_2_Template, 2, 1, \"ng-container\", 31);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_5_ng_container_3_Template, 2, 4, \"ng-container\", 31);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_template_5_ng_template_4_Template, 1, 1, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, AutoComplete_div_8_ng_template_5_li_6_Template, 3, 6, \"li\", 40);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const scrollerOptions_r66 = ctx.options;\n    const ctx_r51 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r66.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r66.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r51.listId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r51.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.noResults && ctx_r51.showEmptyMessage);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c16 = function () {\n  return [\"p-autocomplete-panel p-component\"];\n};\n\nconst _c17 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c18 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction AutoComplete_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r98 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27, 28);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r97 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r97.onOverlayClick($event));\n    })(\"@overlayAnimation.start\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r99 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r99.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.done\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      const ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.onOverlayAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_container_2_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_p_scroller_3_Template, 4, 10, \"p-scroller\", 30);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_container_4_Template, 2, 6, \"ng-container\", 31);\n    i0.ɵɵtemplate(5, AutoComplete_div_8_ng_template_5_Template, 7, 7, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, AutoComplete_div_8_ng_container_7_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(11, _c16))(\"ngStyle\", ctx_r7.panelStyle)(\"@overlayAnimation\", i0.ɵɵpureFunction1(15, _c18, i0.ɵɵpureFunction2(12, _c17, ctx_r7.showTransitionOptions, ctx_r7.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n  }\n}\n\nconst _c19 = function (a1, a2) {\n  return {\n    \"p-autocomplete p-component\": true,\n    \"p-autocomplete-dd\": a1,\n    \"p-autocomplete-multiple\": a2\n  };\n};\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoComplete),\n  multi: true\n};\n\nclass AutoComplete {\n  constructor(el, renderer, cd, differs, config, overlayService) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.differs = differs;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.minLength = 1;\n    this.delay = 300;\n    this.scrollHeight = '200px';\n    this.lazy = false;\n    this.type = 'text';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.dropdownIcon = 'pi pi-chevron-down';\n    this.unique = true;\n    this.completeOnFocus = false;\n    this.showClear = false;\n    this.dropdownMode = 'blank';\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autocomplete = 'off';\n    this.completeMethod = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onUnselect = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n\n    this.overlayVisible = false;\n    this.focus = false;\n    this.inputFieldValue = null;\n    this.inputValue = null;\n    this.differ = differs.find([]).create(null);\n    this.listId = UniqueComponentId() + '_list';\n  }\n\n  get itemSize() {\n    return this._itemSize;\n  }\n\n  set itemSize(val) {\n    this._itemSize = val;\n    console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n  }\n\n  get suggestions() {\n    return this._suggestions;\n  }\n\n  set suggestions(val) {\n    this._suggestions = val;\n    this.handleSuggestionsChange();\n  }\n\n  ngAfterViewChecked() {\n    //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n    if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n      setTimeout(() => {\n        if (this.overlay) {\n          this.alignOverlay();\n        }\n      }, 1);\n      this.suggestionsUpdated = false;\n    }\n\n    if (this.highlightOptionChanged) {\n      setTimeout(() => {\n        if (this.overlay && this.itemsWrapper) {\n          let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n\n          if (listItem) {\n            DomHandler.scrollInView(this.itemsWrapper, listItem);\n          }\n        }\n      }, 1);\n      this.highlightOptionChanged = false;\n    }\n  }\n\n  handleSuggestionsChange() {\n    if (this._suggestions != null && this.loading) {\n      this.highlightOption = null;\n\n      if (this._suggestions.length) {\n        this.noResults = false;\n        this.show();\n        this.suggestionsUpdated = true;\n\n        if (this.autoHighlight) {\n          this.highlightOption = this._suggestions[0];\n        }\n      } else {\n        this.noResults = true;\n\n        if (this.showEmptyMessage) {\n          this.show();\n          this.suggestionsUpdated = true;\n        } else {\n          this.hide();\n        }\n      }\n\n      this.loading = false;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.filled = this.value && this.value != '';\n    this.updateInputField();\n    this.cd.markForCheck();\n  }\n\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  onInput(event) {\n    // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n    if (!this.inputKeyDown && DomHandler.isIE()) {\n      return;\n    }\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    let value = event.target.value;\n    this.inputValue = value;\n\n    if (!this.multiple && !this.forceSelection) {\n      this.onModelChange(value);\n    }\n\n    if (value.length === 0 && !this.multiple) {\n      this.value = null;\n      this.hide();\n      this.onClear.emit(event);\n      this.onModelChange(value);\n    }\n\n    if (value.length >= this.minLength) {\n      this.timeout = setTimeout(() => {\n        this.search(event, value);\n      }, this.delay);\n    } else {\n      this.hide();\n    }\n\n    this.updateFilledState();\n    this.inputKeyDown = false;\n  }\n\n  onInputClick(event) {\n    if (this.documentClickListener) {\n      this.inputClick = true;\n    }\n  }\n\n  search(event, query) {\n    //allow empty string but not undefined or null\n    if (query === undefined || query === null) {\n      return;\n    }\n\n    this.loading = true;\n    this.completeMethod.emit({\n      originalEvent: event,\n      query: query\n    });\n  }\n\n  selectItem(option, focus = true) {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n\n    if (this.multiple) {\n      this.multiInputEL.nativeElement.value = '';\n      this.value = this.value || [];\n\n      if (!this.isSelected(option) || !this.unique) {\n        this.value = [...this.value, option];\n        this.onModelChange(this.value);\n      }\n    } else {\n      this.inputEL.nativeElement.value = this.resolveFieldData(option);\n      this.value = option;\n      this.onModelChange(this.value);\n    }\n\n    this.onSelect.emit(option);\n    this.updateFilledState();\n\n    if (focus) {\n      this.itemClicked = true;\n      this.focusInput();\n    }\n  }\n\n  show() {\n    if (this.multiInputEL || this.inputEL) {\n      let hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n\n      if (!this.overlayVisible && hasFocus) {\n        this.overlayVisible = true;\n      }\n    }\n  }\n\n  clear() {\n    if (this.multiple) {\n      this.value = null;\n    } else {\n      this.inputValue = null;\n      this.inputEL.nativeElement.value = '';\n    }\n\n    this.updateFilledState();\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n\n  onOverlayAnimationStart(event) {\n    var _a;\n\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.p-scroller') : this.overlay;\n        this.virtualScroll && ((_a = this.scroller) === null || _a === void 0 ? void 0 : _a.setContentEl(this.itemsViewChild.nativeElement));\n        this.appendOverlay();\n\n        if (this.autoZIndex) {\n          ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n        }\n\n        this.alignOverlay();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n        this.onShow.emit(event);\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n        break;\n    }\n  }\n\n  onOverlayAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        if (this.autoZIndex) {\n          ZIndexUtils.clear(event.element);\n        }\n\n        break;\n    }\n  }\n\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement\n    });\n  }\n\n  appendOverlay() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n      if (!this.overlay.style.minWidth) {\n        this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n      }\n    }\n  }\n\n  resolveFieldData(value) {\n    let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n    return data !== (null || undefined) ? data : '';\n  }\n\n  restoreOverlayAppend() {\n    if (this.overlay && this.appendTo) {\n      this.el.nativeElement.appendChild(this.overlay);\n    }\n  }\n\n  alignOverlay() {\n    if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n  }\n\n  hide() {\n    this.overlayVisible = false;\n    this.cd.markForCheck();\n  }\n\n  handleDropdownClick(event) {\n    if (!this.overlayVisible) {\n      this.focusInput();\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);\n      this.onDropdownClick.emit({\n        originalEvent: event,\n        query: queryValue\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  focusInput() {\n    if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();\n  }\n\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n\n  removeItem(item) {\n    let itemIndex = DomHandler.index(item);\n    let removedValue = this.value[itemIndex];\n    this.value = this.value.filter((val, i) => i != itemIndex);\n    this.onModelChange(this.value);\n    this.updateFilledState();\n    this.onUnselect.emit(removedValue);\n  }\n\n  onKeydown(event) {\n    if (this.overlayVisible) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex !== -1) {\n              let nextItemIndex = highlightItemIndex.itemIndex + 1;\n\n              if (nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex != -1) {\n              var nextItemIndex = highlightItemIndex + 1;\n\n              if (nextItemIndex != this.suggestions.length) {\n                this.highlightOption = this.suggestions[nextItemIndex];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.suggestions[0];\n            }\n          }\n\n          event.preventDefault();\n          break;\n        //up\n\n        case 38:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex !== -1) {\n              let prevItemIndex = highlightItemIndex.itemIndex - 1;\n\n              if (prevItemIndex >= 0) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (prevItemIndex < 0) {\n                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n\n                if (prevGroup) {\n                  this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                  this.highlightOptionChanged = true;\n                }\n              }\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex > 0) {\n              let prevItemIndex = highlightItemIndex - 1;\n              this.highlightOption = this.suggestions[prevItemIndex];\n              this.highlightOptionChanged = true;\n            }\n          }\n\n          event.preventDefault();\n          break;\n        //enter\n\n        case 13:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n            this.hide();\n          }\n\n          event.preventDefault();\n          break;\n        //escape\n\n        case 27:\n          this.hide();\n          event.preventDefault();\n          break;\n        //tab\n\n        case 9:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n          }\n\n          this.hide();\n          break;\n      }\n    } else {\n      if (event.which === 40 && this.suggestions) {\n        this.search(event, event.target.value);\n      } else if (event.ctrlKey && event.key === 'z' && !this.multiple) {\n        this.inputEL.nativeElement.value = this.resolveFieldData(null);\n        this.value = '';\n        this.onModelChange(this.value);\n      } else if (event.ctrlKey && event.key === 'z' && this.multiple) {\n        this.value.pop();\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n\n    if (this.multiple) {\n      switch (event.which) {\n        //backspace\n        case 8:\n          if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n            this.value = [...this.value];\n            const removedValue = this.value.pop();\n            this.onModelChange(this.value);\n            this.updateFilledState();\n            this.onUnselect.emit(removedValue);\n          }\n\n          break;\n      }\n    }\n\n    this.inputKeyDown = true;\n  }\n\n  onKeyup(event) {\n    this.onKeyUp.emit(event);\n  }\n\n  onInputFocus(event) {\n    if (!this.itemClicked && this.completeOnFocus) {\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      this.search(event, queryValue);\n    }\n\n    this.focus = true;\n    this.onFocus.emit(event);\n    this.itemClicked = false;\n  }\n\n  onInputBlur(event) {\n    this.focus = false;\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n\n  onInputChange(event) {\n    if (this.forceSelection) {\n      let valid = false;\n      let inputValue = event.target.value.trim();\n\n      if (this.suggestions) {\n        for (let suggestion of this.suggestions) {\n          let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n\n          if (itemValue && inputValue === itemValue.trim()) {\n            valid = true;\n            this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n              this.selectItem(suggestion, false);\n            }, 250);\n            break;\n          }\n        }\n      }\n\n      if (!valid) {\n        if (this.multiple) {\n          this.multiInputEL.nativeElement.value = '';\n        } else {\n          this.value = null;\n          this.inputEL.nativeElement.value = '';\n        }\n\n        this.onClear.emit(event);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n  }\n\n  onInputPaste(event) {\n    this.onKeydown(event);\n  }\n\n  isSelected(val) {\n    let selected = false;\n\n    if (this.value && this.value.length) {\n      for (let i = 0; i < this.value.length; i++) {\n        if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n          selected = true;\n          break;\n        }\n      }\n    }\n\n    return selected;\n  }\n\n  findOptionIndex(option, suggestions) {\n    let index = -1;\n\n    if (suggestions) {\n      for (let i = 0; i < suggestions.length; i++) {\n        if (ObjectUtils.equals(option, suggestions[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  findOptionGroupIndex(val, opts) {\n    let groupIndex, itemIndex;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        groupIndex = i;\n        itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n        if (itemIndex !== -1) {\n          break;\n        }\n      }\n    }\n\n    if (itemIndex !== -1) {\n      return {\n        groupIndex: groupIndex,\n        itemIndex: itemIndex\n      };\n    } else {\n      return -1;\n    }\n  }\n\n  updateFilledState() {\n    if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';\n  }\n\n  updateInputField() {\n    let formattedValue = this.resolveFieldData(this.value);\n    this.inputFieldValue = formattedValue;\n\n    if (this.inputEL && this.inputEL.nativeElement) {\n      this.inputEL.nativeElement.value = formattedValue;\n    }\n\n    this.updateFilledState();\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n        if (event.which === 3) {\n          return;\n        }\n\n        if (!this.inputClick && !this.isDropdownClick(event)) {\n          this.hide();\n        }\n\n        this.inputClick = false;\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  isDropdownClick(event) {\n    if (this.dropdown) {\n      let target = event.target;\n      return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n    } else {\n      return false;\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  onWindowResize() {\n    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n      this.hide();\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n\n    if (this.overlay) {\n      this.overlay = null;\n      this.onHide.emit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    if (this.overlay) {\n      ZIndexUtils.clear(this.overlay);\n    }\n\n    this.restoreOverlayAppend();\n    this.onOverlayHide();\n  }\n\n}\n\nAutoComplete.ɵfac = function AutoComplete_Factory(t) {\n  return new (t || AutoComplete)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nAutoComplete.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutoComplete,\n  selectors: [[\"p-autoComplete\"]],\n  contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function AutoComplete_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n      i0.ɵɵviewQuery(_c6, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.autofocus || ctx.overlayVisible)(\"p-autocomplete-clearable\", ctx.showClear && !ctx.disabled);\n    }\n  },\n  inputs: {\n    minLength: \"minLength\",\n    delay: \"delay\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    inputStyle: \"inputStyle\",\n    inputId: \"inputId\",\n    inputStyleClass: \"inputStyleClass\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    scrollHeight: \"scrollHeight\",\n    lazy: \"lazy\",\n    virtualScroll: \"virtualScroll\",\n    virtualScrollItemSize: \"virtualScrollItemSize\",\n    virtualScrollOptions: \"virtualScrollOptions\",\n    maxlength: \"maxlength\",\n    name: \"name\",\n    required: \"required\",\n    size: \"size\",\n    appendTo: \"appendTo\",\n    autoHighlight: \"autoHighlight\",\n    forceSelection: \"forceSelection\",\n    type: \"type\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    ariaLabel: \"ariaLabel\",\n    dropdownAriaLabel: \"dropdownAriaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    dropdownIcon: \"dropdownIcon\",\n    unique: \"unique\",\n    group: \"group\",\n    completeOnFocus: \"completeOnFocus\",\n    showClear: \"showClear\",\n    field: \"field\",\n    dropdown: \"dropdown\",\n    showEmptyMessage: \"showEmptyMessage\",\n    dropdownMode: \"dropdownMode\",\n    multiple: \"multiple\",\n    tabindex: \"tabindex\",\n    dataKey: \"dataKey\",\n    emptyMessage: \"emptyMessage\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autofocus: \"autofocus\",\n    autocomplete: \"autocomplete\",\n    optionGroupChildren: \"optionGroupChildren\",\n    optionGroupLabel: \"optionGroupLabel\",\n    itemSize: \"itemSize\",\n    suggestions: \"suggestions\"\n  },\n  outputs: {\n    completeMethod: \"completeMethod\",\n    onSelect: \"onSelect\",\n    onUnselect: \"onUnselect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onDropdownClick: \"onDropdownClick\",\n    onClear: \"onClear\",\n    onKeyUp: \"onKeyUp\",\n    onShow: \"onShow\",\n    onHide: \"onHide\",\n    onLazyLoad: \"onLazyLoad\"\n  },\n  features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n  decls: 9,\n  vars: 14,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"pAutoFocus\", \"\", \"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 3, \"autofocus\", \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"autofocus\", \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"autofocus\", \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [3, \"ngClass\", \"ngStyle\", \"click\"], [\"panel\", \"\"], [4, \"ngTemplateOutlet\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [4, \"ngIf\"], [\"buildInItems\", \"\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"itemslist\", \"\"], [\"class\", \"p-autocomplete-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\", 3, \"ngStyle\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngStyle\", \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngStyle\", \"ngClass\", \"id\", \"click\"], [1, \"p-autocomplete-empty-message\", 3, \"ngStyle\"], [4, \"ngIf\", \"ngIfElse\"], [\"empty\", \"\"]],\n  template: function AutoComplete_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0, 1);\n      i0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 23, \"input\", 2);\n      i0.ɵɵtemplate(3, AutoComplete_i_3_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(5, AutoComplete_ul_5_Template, 6, 23, \"ul\", 4);\n      i0.ɵɵtemplate(6, AutoComplete_i_6_Template, 1, 0, \"i\", 5);\n      i0.ɵɵtemplate(7, AutoComplete_button_7_Template, 2, 4, \"button\", 6);\n      i0.ɵɵtemplate(8, AutoComplete_div_8_Template, 8, 17, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c19, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple && ctx.filled && !ctx.disabled && ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple && ctx.filled && !ctx.disabled && ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.ButtonDirective, i1.PrimeTemplate, i4.Ripple, i5.Scroller, i6.AutoFocus],\n  styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoComplete, [{\n    type: Component,\n    args: [{\n      selector: 'p-autoComplete',\n      template: `\n        <span #container [ngClass]=\"{ 'p-autocomplete p-component': true, 'p-autocomplete-dd': dropdown, 'p-autocomplete-multiple': multiple }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                *ngIf=\"!multiple\"\n                #in\n                [attr.type]=\"type\"\n                [attr.id]=\"inputId\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [autocomplete]=\"autocomplete\"\n                [attr.required]=\"required\"\n                [attr.name]=\"name\"\n                class=\"p-autocomplete-input p-inputtext p-component\"\n                [ngClass]=\"{ 'p-autocomplete-dd-input': dropdown, 'p-disabled': disabled }\"\n                [value]=\"inputFieldValue\"\n                aria-autocomplete=\"list\"\n                role=\"searchbox\"\n                (click)=\"onInputClick($event)\"\n                (input)=\"onInput($event)\"\n                (keydown)=\"onKeydown($event)\"\n                (keyup)=\"onKeyup($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (change)=\"onInputChange($event)\"\n                (paste)=\"onInputPaste($event)\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.size]=\"size\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-required]=\"required\"\n            />\n            <i *ngIf=\"!multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{ 'p-disabled': disabled, 'p-focus': focus }\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: val }\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{ resolveFieldData(val) }}</span>\n                    <span class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input\n                        pAutoFocus\n                        [autofocus]=\"autofocus\"\n                        #multiIn\n                        [attr.type]=\"type\"\n                        [attr.id]=\"inputId\"\n                        [disabled]=\"disabled\"\n                        [attr.placeholder]=\"value && value.length ? null : placeholder\"\n                        [attr.tabindex]=\"tabindex\"\n                        [attr.maxlength]=\"maxlength\"\n                        (input)=\"onInput($event)\"\n                        (click)=\"onInputClick($event)\"\n                        (keydown)=\"onKeydown($event)\"\n                        [readonly]=\"readonly\"\n                        (keyup)=\"onKeyup($event)\"\n                        (focus)=\"onInputFocus($event)\"\n                        (blur)=\"onInputBlur($event)\"\n                        (change)=\"onInputChange($event)\"\n                        (paste)=\"onInputPaste($event)\"\n                        [autocomplete]=\"autocomplete\"\n                        [ngStyle]=\"inputStyle\"\n                        [class]=\"inputStyleClass\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-labelledby]=\"ariaLabelledBy\"\n                        [attr.aria-required]=\"required\"\n                        aria-autocomplete=\"list\"\n                        [attr.aria-controls]=\"listId\"\n                        role=\"searchbox\"\n                        [attr.aria-expanded]=\"overlayVisible\"\n                        aria-haspopup=\"true\"\n                        [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n                    />\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i\n            ><button\n                #ddBtn\n                type=\"button\"\n                pButton\n                [icon]=\"dropdownIcon\"\n                [attr.aria-label]=\"dropdownAriaLabel\"\n                class=\"p-autocomplete-dropdown\"\n                [disabled]=\"disabled\"\n                pRipple\n                (click)=\"handleDropdownClick($event)\"\n                *ngIf=\"dropdown\"\n                [attr.tabindex]=\"tabindex\"\n            ></button>\n            <div\n                #panel\n                *ngIf=\"overlayVisible\"\n                (click)=\"onOverlayClick($event)\"\n                [ngClass]=\"['p-autocomplete-panel p-component']\"\n                [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\"\n                [ngStyle]=\"panelStyle\"\n                [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n            >\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <p-scroller\n                    *ngIf=\"virtualScroll\"\n                    #scroller\n                    [items]=\"suggestions\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                    [autoSize]=\"true\"\n                    [lazy]=\"lazy\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                    [options]=\"virtualScrollOptions\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: suggestions, options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul #items role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                <li class=\"p-autocomplete-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items }\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-suggestionsToDisplay>\n                            <li\n                                role=\"option\"\n                                *ngFor=\"let option of suggestionsToDisplay; let idx = index\"\n                                class=\"p-autocomplete-item\"\n                                pRipple\n                                [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                [ngClass]=\"{ 'p-highlight': option === highlightOption }\"\n                                [id]=\"highlightOption == option ? 'p-highlighted-option' : ''\"\n                                (click)=\"selectItem(option)\"\n                            >\n                                <span *ngIf=\"!itemTemplate\">{{ resolveFieldData(option) }}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: scrollerOptions.getOptions ? scrollerOptions.getOptions(idx) : idx }\"></ng-container>\n                            </li>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessageLabel }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        class: 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': '((focus && !disabled) || autofocus) || overlayVisible',\n        '[class.p-autocomplete-clearable]': 'showClear && !disabled'\n      },\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    minLength: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    virtualScrollItemSize: [{\n      type: Input\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoHighlight: [{\n      type: Input\n    }],\n    forceSelection: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    dropdownAriaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    unique: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    completeOnFocus: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    dropdown: [{\n      type: Input\n    }],\n    showEmptyMessage: [{\n      type: Input\n    }],\n    dropdownMode: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    containerEL: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    inputEL: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    multiInputEL: [{\n      type: ViewChild,\n      args: ['multiIn']\n    }],\n    multiContainerEL: [{\n      type: ViewChild,\n      args: ['multiContainer']\n    }],\n    dropdownButton: [{\n      type: ViewChild,\n      args: ['ddBtn']\n    }],\n    itemsViewChild: [{\n      type: ViewChild,\n      args: ['items']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    completeMethod: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onUnselect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    suggestions: [{\n      type: Input\n    }]\n  });\n})();\n\nclass AutoCompleteModule {}\n\nAutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) {\n  return new (t || AutoCompleteModule)();\n};\n\nAutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutoCompleteModule\n});\nAutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule, SharedModule, ScrollerModule, AutoFocusModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule],\n      exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule],\n      declarations: [AutoComplete]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };","map":{"version":3,"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","ViewChild","ContentChildren","Output","NgModule","i2","CommonModule","trigger","transition","style","animate","InputTextModule","i3","ButtonModule","i4","RippleModule","i1","TranslationKeys","PrimeTemplate","SharedModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","ZIndexUtils","NG_VALUE_ACCESSOR","i5","ScrollerModule","i6","AutoFocusModule","AUTOCOMPLETE_VALUE_ACCESSOR","provide","useExisting","AutoComplete","multi","constructor","el","renderer","cd","differs","config","overlayService","minLength","delay","scrollHeight","lazy","type","autoZIndex","baseZIndex","dropdownIcon","unique","completeOnFocus","showClear","dropdownMode","showTransitionOptions","hideTransitionOptions","autocomplete","completeMethod","onSelect","onUnselect","onFocus","onBlur","onDropdownClick","onClear","onKeyUp","onShow","onHide","onLazyLoad","onModelChange","onModelTouched","overlayVisible","focus","inputFieldValue","inputValue","differ","find","create","listId","itemSize","_itemSize","val","console","warn","suggestions","_suggestions","handleSuggestionsChange","ngAfterViewChecked","suggestionsUpdated","overlay","offsetParent","setTimeout","alignOverlay","highlightOptionChanged","itemsWrapper","listItem","findSingle","scrollInView","loading","highlightOption","length","noResults","show","autoHighlight","showEmptyMessage","hide","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","template","groupTemplate","selectedItemTemplate","headerTemplate","emptyTemplate","footerTemplate","loaderTemplate","writeValue","value","filled","updateInputField","markForCheck","getOptionGroupChildren","optionGroup","optionGroupChildren","resolveFieldData","items","getOptionGroupLabel","optionGroupLabel","label","undefined","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","onInput","event","inputKeyDown","isIE","timeout","clearTimeout","target","multiple","forceSelection","emit","search","updateFilledState","onInputClick","documentClickListener","inputClick","query","originalEvent","selectItem","option","forceSelectionUpdateModelTimeout","multiInputEL","nativeElement","isSelected","inputEL","itemClicked","focusInput","hasFocus","ownerDocument","activeElement","clear","onOverlayAnimationStart","_a","toState","element","virtualScroll","scroller","setContentEl","itemsViewChild","appendOverlay","set","zIndex","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","onOverlayClick","add","appendTo","document","body","appendChild","minWidth","getWidth","children","data","field","restoreOverlayAppend","absolutePosition","multiContainerEL","relativePosition","handleDropdownClick","queryValue","emptyMessageLabel","emptyMessage","getTranslation","EMPTY_MESSAGE","removeItem","itemIndex","index","removedValue","filter","i","onKeydown","which","group","highlightItemIndex","findOptionGroupIndex","nextItemIndex","groupIndex","findOptionIndex","preventDefault","prevItemIndex","prevGroup","ctrlKey","key","pop","onKeyup","onInputFocus","onInputBlur","onInputChange","valid","trim","suggestion","itemValue","onInputPaste","selected","equals","dataKey","opts","formattedValue","documentTarget","listen","isDropdownClick","dropdown","dropdownButton","parentNode","unbindDocumentClickListener","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","isTouchDevice","scrollHandler","containerEL","unbindScrollListener","ngOnDestroy","destroy","ɵfac","ElementRef","Renderer2","ChangeDetectorRef","IterableDiffers","PrimeNGConfig","OverlayService","ɵcmp","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","ButtonDirective","Ripple","Scroller","AutoFocus","opacity","transform","args","selector","animations","host","class","providers","changeDetection","OnPush","encapsulation","None","styles","panelStyle","styleClass","panelStyleClass","inputStyle","inputId","inputStyleClass","placeholder","readonly","virtualScrollItemSize","virtualScrollOptions","maxlength","name","required","size","ariaLabel","dropdownAriaLabel","ariaLabelledBy","tabindex","autofocus","AutoCompleteModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/gaeta/Downloads/alten-shop-back-products/alten-shop-back-products/front/node_modules/primeng/fesm2015/primeng-autocomplete.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i6 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoComplete),\n    multi: true\n};\nclass AutoComplete {\n    constructor(el, renderer, cd, differs, config, overlayService) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.differs = differs;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.minLength = 1;\n        this.delay = 300;\n        this.scrollHeight = '200px';\n        this.lazy = false;\n        this.type = 'text';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.dropdownIcon = 'pi pi-chevron-down';\n        this.unique = true;\n        this.completeOnFocus = false;\n        this.showClear = false;\n        this.dropdownMode = 'blank';\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autocomplete = 'off';\n        this.completeMethod = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onUnselect = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onDropdownClick = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onLazyLoad = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.overlayVisible = false;\n        this.focus = false;\n        this.inputFieldValue = null;\n        this.inputValue = null;\n        this.differ = differs.find([]).create(null);\n        this.listId = UniqueComponentId() + '_list';\n    }\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(val) {\n        this._itemSize = val;\n        console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    get suggestions() {\n        return this._suggestions;\n    }\n    set suggestions(val) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n    }\n    ngAfterViewChecked() {\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    this.alignOverlay();\n                }\n            }, 1);\n            this.suggestionsUpdated = false;\n        }\n        if (this.highlightOptionChanged) {\n            setTimeout(() => {\n                if (this.overlay && this.itemsWrapper) {\n                    let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n                    if (listItem) {\n                        DomHandler.scrollInView(this.itemsWrapper, listItem);\n                    }\n                }\n            }, 1);\n            this.highlightOptionChanged = false;\n        }\n    }\n    handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n            this.highlightOption = null;\n            if (this._suggestions.length) {\n                this.noResults = false;\n                this.show();\n                this.suggestionsUpdated = true;\n                if (this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n            else {\n                this.noResults = true;\n                if (this.showEmptyMessage) {\n                    this.show();\n                    this.suggestionsUpdated = true;\n                }\n                else {\n                    this.hide();\n                }\n            }\n            this.loading = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onInput(event) {\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n            return;\n        }\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        let value = event.target.value;\n        this.inputValue = value;\n        if (!this.multiple && !this.forceSelection) {\n            this.onModelChange(value);\n        }\n        if (value.length === 0 && !this.multiple) {\n            this.value = null;\n            this.hide();\n            this.onClear.emit(event);\n            this.onModelChange(value);\n        }\n        if (value.length >= this.minLength) {\n            this.timeout = setTimeout(() => {\n                this.search(event, value);\n            }, this.delay);\n        }\n        else {\n            this.hide();\n        }\n        this.updateFilledState();\n        this.inputKeyDown = false;\n    }\n    onInputClick(event) {\n        if (this.documentClickListener) {\n            this.inputClick = true;\n        }\n    }\n    search(event, query) {\n        //allow empty string but not undefined or null\n        if (query === undefined || query === null) {\n            return;\n        }\n        this.loading = true;\n        this.completeMethod.emit({\n            originalEvent: event,\n            query: query\n        });\n    }\n    selectItem(option, focus = true) {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n            this.value = this.value || [];\n            if (!this.isSelected(option) || !this.unique) {\n                this.value = [...this.value, option];\n                this.onModelChange(this.value);\n            }\n        }\n        else {\n            this.inputEL.nativeElement.value = this.resolveFieldData(option);\n            this.value = option;\n            this.onModelChange(this.value);\n        }\n        this.onSelect.emit(option);\n        this.updateFilledState();\n        if (focus) {\n            this.itemClicked = true;\n            this.focusInput();\n        }\n    }\n    show() {\n        if (this.multiInputEL || this.inputEL) {\n            let hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n            if (!this.overlayVisible && hasFocus) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n    clear() {\n        if (this.multiple) {\n            this.value = null;\n        }\n        else {\n            this.inputValue = null;\n            this.inputEL.nativeElement.value = '';\n        }\n        this.updateFilledState();\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onOverlayAnimationStart(event) {\n        var _a;\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.p-scroller') : this.overlay;\n                this.virtualScroll && ((_a = this.scroller) === null || _a === void 0 ? void 0 : _a.setContentEl(this.itemsViewChild.nativeElement));\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                if (this.autoZIndex) {\n                    ZIndexUtils.clear(event.element);\n                }\n                break;\n        }\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n            }\n        }\n    }\n    resolveFieldData(value) {\n        let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n        return data !== (null || undefined) ? data : '';\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n    }\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n    handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n            this.focusInput();\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            if (this.dropdownMode === 'blank')\n                this.search(event, '');\n            else if (this.dropdownMode === 'current')\n                this.search(event, queryValue);\n            this.onDropdownClick.emit({\n                originalEvent: event,\n                query: queryValue\n            });\n        }\n        else {\n            this.hide();\n        }\n    }\n    focusInput() {\n        if (this.multiple)\n            this.multiInputEL.nativeElement.focus();\n        else\n            this.inputEL.nativeElement.focus();\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    removeItem(item) {\n        let itemIndex = DomHandler.index(item);\n        let removedValue = this.value[itemIndex];\n        this.value = this.value.filter((val, i) => i != itemIndex);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n    }\n    onKeydown(event) {\n        if (this.overlayVisible) {\n            switch (event.which) {\n                //down\n                case 40:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let nextItemIndex = highlightItemIndex.itemIndex + 1;\n                            if (nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex != -1) {\n                            var nextItemIndex = highlightItemIndex + 1;\n                            if (nextItemIndex != this.suggestions.length) {\n                                this.highlightOption = this.suggestions[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.suggestions[0];\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //up\n                case 38:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let prevItemIndex = highlightItemIndex.itemIndex - 1;\n                            if (prevItemIndex >= 0) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (prevItemIndex < 0) {\n                                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                                if (prevGroup) {\n                                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                                    this.highlightOptionChanged = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex > 0) {\n                            let prevItemIndex = highlightItemIndex - 1;\n                            this.highlightOption = this.suggestions[prevItemIndex];\n                            this.highlightOptionChanged = true;\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //enter\n                case 13:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                        this.hide();\n                    }\n                    event.preventDefault();\n                    break;\n                //escape\n                case 27:\n                    this.hide();\n                    event.preventDefault();\n                    break;\n                //tab\n                case 9:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                    }\n                    this.hide();\n                    break;\n            }\n        }\n        else {\n            if (event.which === 40 && this.suggestions) {\n                this.search(event, event.target.value);\n            }\n            else if (event.ctrlKey && event.key === 'z' && !this.multiple) {\n                this.inputEL.nativeElement.value = this.resolveFieldData(null);\n                this.value = '';\n                this.onModelChange(this.value);\n            }\n            else if (event.ctrlKey && event.key === 'z' && this.multiple) {\n                this.value.pop();\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n        if (this.multiple) {\n            switch (event.which) {\n                //backspace\n                case 8:\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                        this.value = [...this.value];\n                        const removedValue = this.value.pop();\n                        this.onModelChange(this.value);\n                        this.updateFilledState();\n                        this.onUnselect.emit(removedValue);\n                    }\n                    break;\n            }\n        }\n        this.inputKeyDown = true;\n    }\n    onKeyup(event) {\n        this.onKeyUp.emit(event);\n    }\n    onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus) {\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            this.search(event, queryValue);\n        }\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n    }\n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    onInputChange(event) {\n        if (this.forceSelection) {\n            let valid = false;\n            let inputValue = event.target.value.trim();\n            if (this.suggestions) {\n                for (let suggestion of this.suggestions) {\n                    let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n                    if (itemValue && inputValue === itemValue.trim()) {\n                        valid = true;\n                        this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n                            this.selectItem(suggestion, false);\n                        }, 250);\n                        break;\n                    }\n                }\n            }\n            if (!valid) {\n                if (this.multiple) {\n                    this.multiInputEL.nativeElement.value = '';\n                }\n                else {\n                    this.value = null;\n                    this.inputEL.nativeElement.value = '';\n                }\n                this.onClear.emit(event);\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n    }\n    onInputPaste(event) {\n        this.onKeydown(event);\n    }\n    isSelected(val) {\n        let selected = false;\n        if (this.value && this.value.length) {\n            for (let i = 0; i < this.value.length; i++) {\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n                    selected = true;\n                    break;\n                }\n            }\n        }\n        return selected;\n    }\n    findOptionIndex(option, suggestions) {\n        let index = -1;\n        if (suggestions) {\n            for (let i = 0; i < suggestions.length; i++) {\n                if (ObjectUtils.equals(option, suggestions[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    updateFilledState() {\n        if (this.multiple)\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\n        else\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');\n    }\n    updateInputField() {\n        let formattedValue = this.resolveFieldData(this.value);\n        this.inputFieldValue = formattedValue;\n        if (this.inputEL && this.inputEL.nativeElement) {\n            this.inputEL.nativeElement.value = formattedValue;\n        }\n        this.updateFilledState();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (event.which === 3) {\n                    return;\n                }\n                if (!this.inputClick && !this.isDropdownClick(event)) {\n                    this.hide();\n                }\n                this.inputClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    isDropdownClick(event) {\n        if (this.dropdown) {\n            let target = event.target;\n            return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n        }\n        else {\n            return false;\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n            this.hide();\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        if (this.overlay) {\n            this.overlay = null;\n            this.onHide.emit();\n        }\n    }\n    ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\nAutoComplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: AutoComplete, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.IterableDiffers }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nAutoComplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.7\", type: AutoComplete, selector: \"p-autoComplete\", inputs: { minLength: \"minLength\", delay: \"delay\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", inputStyle: \"inputStyle\", inputId: \"inputId\", inputStyleClass: \"inputStyleClass\", placeholder: \"placeholder\", readonly: \"readonly\", disabled: \"disabled\", scrollHeight: \"scrollHeight\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", maxlength: \"maxlength\", name: \"name\", required: \"required\", size: \"size\", appendTo: \"appendTo\", autoHighlight: \"autoHighlight\", forceSelection: \"forceSelection\", type: \"type\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", ariaLabel: \"ariaLabel\", dropdownAriaLabel: \"dropdownAriaLabel\", ariaLabelledBy: \"ariaLabelledBy\", dropdownIcon: \"dropdownIcon\", unique: \"unique\", group: \"group\", completeOnFocus: \"completeOnFocus\", showClear: \"showClear\", field: \"field\", dropdown: \"dropdown\", showEmptyMessage: \"showEmptyMessage\", dropdownMode: \"dropdownMode\", multiple: \"multiple\", tabindex: \"tabindex\", dataKey: \"dataKey\", emptyMessage: \"emptyMessage\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autofocus: \"autofocus\", autocomplete: \"autocomplete\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", itemSize: \"itemSize\", suggestions: \"suggestions\" }, outputs: { completeMethod: \"completeMethod\", onSelect: \"onSelect\", onUnselect: \"onUnselect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onDropdownClick: \"onDropdownClick\", onClear: \"onClear\", onKeyUp: \"onKeyUp\", onShow: \"onShow\", onHide: \"onHide\", onLazyLoad: \"onLazyLoad\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"((focus && !disabled) || autofocus) || overlayVisible\", \"class.p-autocomplete-clearable\": \"showClear && !disabled\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerEL\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"inputEL\", first: true, predicate: [\"in\"], descendants: true }, { propertyName: \"multiInputEL\", first: true, predicate: [\"multiIn\"], descendants: true }, { propertyName: \"multiContainerEL\", first: true, predicate: [\"multiContainer\"], descendants: true }, { propertyName: \"dropdownButton\", first: true, predicate: [\"ddBtn\"], descendants: true }, { propertyName: \"itemsViewChild\", first: true, predicate: [\"items\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }], ngImport: i0, template: `\n        <span #container [ngClass]=\"{ 'p-autocomplete p-component': true, 'p-autocomplete-dd': dropdown, 'p-autocomplete-multiple': multiple }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                *ngIf=\"!multiple\"\n                #in\n                [attr.type]=\"type\"\n                [attr.id]=\"inputId\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [autocomplete]=\"autocomplete\"\n                [attr.required]=\"required\"\n                [attr.name]=\"name\"\n                class=\"p-autocomplete-input p-inputtext p-component\"\n                [ngClass]=\"{ 'p-autocomplete-dd-input': dropdown, 'p-disabled': disabled }\"\n                [value]=\"inputFieldValue\"\n                aria-autocomplete=\"list\"\n                role=\"searchbox\"\n                (click)=\"onInputClick($event)\"\n                (input)=\"onInput($event)\"\n                (keydown)=\"onKeydown($event)\"\n                (keyup)=\"onKeyup($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (change)=\"onInputChange($event)\"\n                (paste)=\"onInputPaste($event)\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.size]=\"size\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-required]=\"required\"\n            />\n            <i *ngIf=\"!multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{ 'p-disabled': disabled, 'p-focus': focus }\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: val }\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{ resolveFieldData(val) }}</span>\n                    <span class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input\n                        pAutoFocus\n                        [autofocus]=\"autofocus\"\n                        #multiIn\n                        [attr.type]=\"type\"\n                        [attr.id]=\"inputId\"\n                        [disabled]=\"disabled\"\n                        [attr.placeholder]=\"value && value.length ? null : placeholder\"\n                        [attr.tabindex]=\"tabindex\"\n                        [attr.maxlength]=\"maxlength\"\n                        (input)=\"onInput($event)\"\n                        (click)=\"onInputClick($event)\"\n                        (keydown)=\"onKeydown($event)\"\n                        [readonly]=\"readonly\"\n                        (keyup)=\"onKeyup($event)\"\n                        (focus)=\"onInputFocus($event)\"\n                        (blur)=\"onInputBlur($event)\"\n                        (change)=\"onInputChange($event)\"\n                        (paste)=\"onInputPaste($event)\"\n                        [autocomplete]=\"autocomplete\"\n                        [ngStyle]=\"inputStyle\"\n                        [class]=\"inputStyleClass\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-labelledby]=\"ariaLabelledBy\"\n                        [attr.aria-required]=\"required\"\n                        aria-autocomplete=\"list\"\n                        [attr.aria-controls]=\"listId\"\n                        role=\"searchbox\"\n                        [attr.aria-expanded]=\"overlayVisible\"\n                        aria-haspopup=\"true\"\n                        [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n                    />\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i\n            ><button\n                #ddBtn\n                type=\"button\"\n                pButton\n                [icon]=\"dropdownIcon\"\n                [attr.aria-label]=\"dropdownAriaLabel\"\n                class=\"p-autocomplete-dropdown\"\n                [disabled]=\"disabled\"\n                pRipple\n                (click)=\"handleDropdownClick($event)\"\n                *ngIf=\"dropdown\"\n                [attr.tabindex]=\"tabindex\"\n            ></button>\n            <div\n                #panel\n                *ngIf=\"overlayVisible\"\n                (click)=\"onOverlayClick($event)\"\n                [ngClass]=\"['p-autocomplete-panel p-component']\"\n                [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\"\n                [ngStyle]=\"panelStyle\"\n                [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n            >\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <p-scroller\n                    *ngIf=\"virtualScroll\"\n                    #scroller\n                    [items]=\"suggestions\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                    [autoSize]=\"true\"\n                    [lazy]=\"lazy\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                    [options]=\"virtualScrollOptions\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: suggestions, options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul #items role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                <li class=\"p-autocomplete-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items }\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-suggestionsToDisplay>\n                            <li\n                                role=\"option\"\n                                *ngFor=\"let option of suggestionsToDisplay; let idx = index\"\n                                class=\"p-autocomplete-item\"\n                                pRipple\n                                [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                [ngClass]=\"{ 'p-highlight': option === highlightOption }\"\n                                [id]=\"highlightOption == option ? 'p-highlighted-option' : ''\"\n                                (click)=\"selectItem(option)\"\n                            >\n                                <span *ngIf=\"!itemTemplate\">{{ resolveFieldData(option) }}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: scrollerOptions.getOptions ? scrollerOptions.getOptions(idx) : idx }\"></ng-container>\n                            </li>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessageLabel }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, isInline: true, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { kind: \"directive\", type: i1.PrimeTemplate, selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i4.Ripple, selector: \"[pRipple]\" }, { kind: \"component\", type: i5.Scroller, selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"directive\", type: i6.AutoFocus, selector: \"[pAutoFocus]\", inputs: [\"autofocus\"] }], animations: [trigger('overlayAnimation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))])])], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: AutoComplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-autoComplete', template: `\n        <span #container [ngClass]=\"{ 'p-autocomplete p-component': true, 'p-autocomplete-dd': dropdown, 'p-autocomplete-multiple': multiple }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input\n                pAutoFocus\n                [autofocus]=\"autofocus\"\n                *ngIf=\"!multiple\"\n                #in\n                [attr.type]=\"type\"\n                [attr.id]=\"inputId\"\n                [ngStyle]=\"inputStyle\"\n                [class]=\"inputStyleClass\"\n                [autocomplete]=\"autocomplete\"\n                [attr.required]=\"required\"\n                [attr.name]=\"name\"\n                class=\"p-autocomplete-input p-inputtext p-component\"\n                [ngClass]=\"{ 'p-autocomplete-dd-input': dropdown, 'p-disabled': disabled }\"\n                [value]=\"inputFieldValue\"\n                aria-autocomplete=\"list\"\n                role=\"searchbox\"\n                (click)=\"onInputClick($event)\"\n                (input)=\"onInput($event)\"\n                (keydown)=\"onKeydown($event)\"\n                (keyup)=\"onKeyup($event)\"\n                (focus)=\"onInputFocus($event)\"\n                (blur)=\"onInputBlur($event)\"\n                (change)=\"onInputChange($event)\"\n                (paste)=\"onInputPaste($event)\"\n                [attr.placeholder]=\"placeholder\"\n                [attr.size]=\"size\"\n                [attr.maxlength]=\"maxlength\"\n                [attr.tabindex]=\"tabindex\"\n                [readonly]=\"readonly\"\n                [disabled]=\"disabled\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-required]=\"required\"\n            />\n            <i *ngIf=\"!multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{ 'p-disabled': disabled, 'p-focus': focus }\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: val }\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{ resolveFieldData(val) }}</span>\n                    <span class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input\n                        pAutoFocus\n                        [autofocus]=\"autofocus\"\n                        #multiIn\n                        [attr.type]=\"type\"\n                        [attr.id]=\"inputId\"\n                        [disabled]=\"disabled\"\n                        [attr.placeholder]=\"value && value.length ? null : placeholder\"\n                        [attr.tabindex]=\"tabindex\"\n                        [attr.maxlength]=\"maxlength\"\n                        (input)=\"onInput($event)\"\n                        (click)=\"onInputClick($event)\"\n                        (keydown)=\"onKeydown($event)\"\n                        [readonly]=\"readonly\"\n                        (keyup)=\"onKeyup($event)\"\n                        (focus)=\"onInputFocus($event)\"\n                        (blur)=\"onInputBlur($event)\"\n                        (change)=\"onInputChange($event)\"\n                        (paste)=\"onInputPaste($event)\"\n                        [autocomplete]=\"autocomplete\"\n                        [ngStyle]=\"inputStyle\"\n                        [class]=\"inputStyleClass\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-labelledby]=\"ariaLabelledBy\"\n                        [attr.aria-required]=\"required\"\n                        aria-autocomplete=\"list\"\n                        [attr.aria-controls]=\"listId\"\n                        role=\"searchbox\"\n                        [attr.aria-expanded]=\"overlayVisible\"\n                        aria-haspopup=\"true\"\n                        [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n                    />\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i\n            ><button\n                #ddBtn\n                type=\"button\"\n                pButton\n                [icon]=\"dropdownIcon\"\n                [attr.aria-label]=\"dropdownAriaLabel\"\n                class=\"p-autocomplete-dropdown\"\n                [disabled]=\"disabled\"\n                pRipple\n                (click)=\"handleDropdownClick($event)\"\n                *ngIf=\"dropdown\"\n                [attr.tabindex]=\"tabindex\"\n            ></button>\n            <div\n                #panel\n                *ngIf=\"overlayVisible\"\n                (click)=\"onOverlayClick($event)\"\n                [ngClass]=\"['p-autocomplete-panel p-component']\"\n                [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\"\n                [ngStyle]=\"panelStyle\"\n                [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{ value: 'visible', params: { showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions } }\"\n                (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\"\n            >\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <p-scroller\n                    *ngIf=\"virtualScroll\"\n                    #scroller\n                    [items]=\"suggestions\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize || _itemSize\"\n                    [autoSize]=\"true\"\n                    [lazy]=\"lazy\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                    [options]=\"virtualScrollOptions\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: suggestions, options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul #items role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"scrollerOptions.contentStyleClass\" [style]=\"scrollerOptions.contentStyle\">\n                        <ng-container *ngIf=\"group\">\n                            <ng-template ngFor let-optgroup [ngForOf]=\"items\">\n                                <li class=\"p-autocomplete-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                                </li>\n                                <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: items }\"></ng-container>\n                        </ng-container>\n                        <ng-template #itemslist let-suggestionsToDisplay>\n                            <li\n                                role=\"option\"\n                                *ngFor=\"let option of suggestionsToDisplay; let idx = index\"\n                                class=\"p-autocomplete-item\"\n                                pRipple\n                                [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                [ngClass]=\"{ 'p-highlight': option === highlightOption }\"\n                                [id]=\"highlightOption == option ? 'p-highlighted-option' : ''\"\n                                (click)=\"selectItem(option)\"\n                            >\n                                <span *ngIf=\"!itemTemplate\">{{ resolveFieldData(option) }}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: scrollerOptions.getOptions ? scrollerOptions.getOptions(idx) : idx }\"></ng-container>\n                            </li>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessageLabel }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, animations: [trigger('overlayAnimation', [transition(':enter', [style({ opacity: 0, transform: 'scaleY(0.8)' }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))])])], host: {\n                        class: 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': '((focus && !disabled) || autofocus) || overlayVisible',\n                        '[class.p-autocomplete-clearable]': 'showClear && !disabled'\n                    }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.IterableDiffers }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }]; }, propDecorators: { minLength: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], autoHighlight: [{\n                type: Input\n            }], forceSelection: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], dropdownAriaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], unique: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], completeOnFocus: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], field: [{\n                type: Input\n            }], dropdown: [{\n                type: Input\n            }], showEmptyMessage: [{\n                type: Input\n            }], dropdownMode: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], containerEL: [{\n                type: ViewChild,\n                args: ['container']\n            }], inputEL: [{\n                type: ViewChild,\n                args: ['in']\n            }], multiInputEL: [{\n                type: ViewChild,\n                args: ['multiIn']\n            }], multiContainerEL: [{\n                type: ViewChild,\n                args: ['multiContainer']\n            }], dropdownButton: [{\n                type: ViewChild,\n                args: ['ddBtn']\n            }], itemsViewChild: [{\n                type: ViewChild,\n                args: ['items']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], completeMethod: [{\n                type: Output\n            }], onSelect: [{\n                type: Output\n            }], onUnselect: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onDropdownClick: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], itemSize: [{\n                type: Input\n            }], suggestions: [{\n                type: Input\n            }] } });\nclass AutoCompleteModule {\n}\nAutoCompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: AutoCompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutoCompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.7\", ngImport: i0, type: AutoCompleteModule, declarations: [AutoComplete], imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule], exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule] });\nAutoCompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: AutoCompleteModule, imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule, SharedModule, ScrollerModule, AutoFocusModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.7\", ngImport: i0, type: AutoCompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule],\n                    exports: [AutoComplete, SharedModule, ScrollerModule, AutoFocusModule],\n                    declarations: [AutoComplete]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}